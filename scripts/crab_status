#!/usr/bin/env python

import argparse

from CRABAPI.RawCommand import crabCommand
from CRABClient.ClientExceptions import ClientException
from CRABClient.UserUtilities import setConsoleLogLevel
from httplib import HTTPException

setConsoleLogLevel(100)

p = argparse.ArgumentParser('grudgingly manage many crab tasks')
p.add_argument('workdirs', nargs='*')

args = p.parse_args()

statii = [crabCommand('status', dir=wd) for wd in args.workdirs]

totals = [sum(s['jobsPerStatus'].values()) for s in statii]
failed = [s['jobsPerStatus']['failed'] for s in statii]
finished = [s['jobsPerStatus']['finished'] for s in statii]
running = [s['jobsPerStatus']['running'] for s in statii]

for wd, t, f, d, r in zip(args.workdirs, totals, failed, finished, running):
    print "{:30}failed:   {:5.2f} ({:5d}/{:5d})".format(wd, float(f) / t, f, t)
    print "{:30}running:  {:5.2f} ({:5d}/{:5d})".format('', float(r) / t, r, t)
    print "{:30}finished: {:5.2f} ({:5d}/{:5d})".format('', float(d) / t, d, t)

ntotal = sum(totals)
nfailed = sum(failed)
nfinished = sum(finished)
nrunning = sum(running)

print "-" * 59
print "{:30}failed:   {:5.2f} ({:5d}/{:5d})".format('total', float(nfailed) / ntotal, nfailed, ntotal)
print "{:30}running:  {:5.2f} ({:5d}/{:5d})".format('', float(nrunning) / ntotal, nrunning, ntotal)
print "{:30}finished: {:5.2f} ({:5d}/{:5d})".format('', float(nfinished) / ntotal, nfinished, ntotal)

print


for wd, status in zip(args.workdirs, statii):
    jobs = [str(v) for k, v in status['jobList'] if k == u'failed']
    print "{:30}resubmitting: {}".format(wd, jobs)
    crabCommand('resubmit', jobids=','.join(jobs), dir=wd)
